apply plugin: 'com.android.application'
apply from: 'version.gradle'
apply from: 'src_dirs.gradle'
android {

    compileSdkVersion 28

    // productFlavors.all {
    defaultConfig {
        applicationId "com.geli.m"
        minSdkVersion 17
        targetSdkVersion 26

        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            // abiFilters 'armeabi'
            abiFilters 'armeabi-v7a'
            //, 'armeabi-v7a'
            //, 'arm64-v8a', 'x86', 'x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
            JPUSH_PKGNAME: "com.geli.m",
            JPUSH_APPKEY : JPUSH_KEY, //JPush上注册的包名对应的appkey.
            JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)//签名文件路径
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD  //签名密码
        }
        debug {
            //            keyAlias 'androiddebugkey'
            //            keyPassword 'android'
            //            storeFile file('./debug.keystore')
            //            storePassword 'android'
            storeFile file(RELEASE_STORE_FILE)//签名文件路径
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD  //签名密码
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug;
        }

        release {

            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release;
        }
    }

    productFlavors {
        online {                /* 线上 */
            //            buildConfigField('String', 'GL_URL', '"http://api2.m.gelifood.com/store/"')
            buildConfigField('String', 'GL_URL', '"http://a.gelistore.com/store/"')
            //            buildConfigField('String', 'GL_IMAGE_URL', '"http://api2.m.gelifood.com/"')     // 图片前缀
            buildConfigField('String', 'GL_IMAGE_URL', '"http://a.gelistore.com/"')     // 图片前缀

            buildConfigField('String', 'GL_DOMAIN', '"www.gelifood.com"')                   // 格利支付绑定要用到的
//            buildConfigField('String', 'GL_PAY_URL', '"https://pay.gelifood.com/"')         // 格利支付绑定要用到的
            buildConfigField('String', 'GL_PAY_URL', '"https://pay.gelistore.com/"')         // 格利支付绑定要用到的
            // 格利支付绑定要用到的
            resValue "string", "app_name", "格利食品网"
        }

        offline {               /* 线下 */
            buildConfigField('String', 'GL_URL', '"http://php.gl.com/index.php/store/"')
            buildConfigField('String', 'GL_IMAGE_URL', '"http://php.gl.com/"')              // 图片前缀

            buildConfigField('String', 'GL_DOMAIN', '"geli.com"')                   // 格利支付绑定要用到的
            buildConfigField('String', 'GL_PAY_URL', '"http://pay.geli.com/"')      // 格利支付绑定要用到的
            resValue "string", "app_name", "(线下)格利食品网"
        }
    }


    // String Url = "http://api2.m.gelifood.com/store/";                // 线上 3期 -- 2019.08.01 -- 再次启用
    // String Url = "http://api2.m.gelifood.com/api/";                  // 线上 3期 -- 2019.04.08
    // String Url = "http://api2.m.gelifood.com/store/";                // 线上 3期 -- 2018.12.10
    // String Url = "http://api.m.gelifood.com/store/";                 // 线上 3期
    // String Url = "http://php.gl.com/index.php/store/";               // 线下
    // String ImagUrl = "http://api2.m.gelifood.com/";                  // 图片线上
    // String ImagUrl = "http://api.m.gelifood.com/";                   // 图片线上
    // String ImagUrl = "http://php.gl.com/";                           // 图片线下

    // String domain = "geli.com";                                   // 线下  -- 格利支付绑定要用到的
    // String GeLiPayUrl = "http://pay.geli.com/";                   // 线下  -- 格利支付绑定要用到的
    // String domain = "www.gelifood.com";                             // 线上
    // String GeLiPayUrl = "https://pay.gelifood.com/";                // 线上

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = srcDirsGL                     // 在src_dirs.gradle
        }
    }




    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    //    configurations.all {
    //        resolutionStrategy {
    //            force 'com.android.support:support-v4:23.0.1'
    //        }
    //    }


    // 编译后的apk名字! -- 这个是3.0 之前的，因为这个程序没有升级
    //    android.applicationVariants.all {
    //        variant -> variant.outputs.each {
    //            output -> output.outputFile = new File(output.outputFile.parent, "Gelifood"
    //                    //+ defaultConfig.versionName + "Builder${buildTime()}.apk");
    //                    + defaultConfig.versionName + ".apk");
    //        }
    //    }

    // 3.0之后
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //def date = new Date().format("yyyyMMdd" , TimeZone.getTimeZone("Asia/Shanghai"))
            def date = new Date().format("yyyyMMdd" , TimeZone.getTimeZone("GMT+08"))
            if(variant.buildType.name.equals('debug')){
                outputFileName = "Gelifood_${date}_${versionName}_debug.apk"
            }
            if(variant.buildType.name.equals('release')){
                // outputFileName = "Gelifood${date}_${versionName}.apk"
                outputFileName = "Gelifood_${variant.productFlavors[0].name}_${versionName}.apk"
            }
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // android 原生控件
    // implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // 高德地图
    implementation files('libs/AMap_Location_V3.4.0_20170427.jar')
    implementation files('libs/AMap3DMap_5.2.1_AMapNavi_5.1.0_20170630.jar')
    implementation 'com.amap.api:search:6.1.0'

    // compile 'com.amap.api:search:latest.integration'  最新的

    // 分享
    implementation files('libs/MobCommons-2017.0412.1554.jar')

    // 支付宝
    implementation files('libs/alipaySdk-20170623-proguard.jar')

    // 腾讯

    // compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:1.3.4'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    // 腾讯Bugly
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    // 图片选择
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.1.7'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.0'

    // glide 图片加载
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    // 京东地址选择
    implementation 'com.github.chihane:JDAddressSelector:1.1.4'

    // 轮播器
    implementation 'com.youth.banner:banner:1.4.9'

    // 流布局
    implementation 'com.zhy:flowlayout-lib:1.0.3'

    // EasyRecyclerView
    implementation 'com.jude:easyrecyclerview:4.4.0'

    // rx全家桶
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    // 控件绑定
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // 二维码
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'cn.bingoogolapple:bga-zxing:1.1.9@aar'
    implementation project(':qrcodecore')

    // 指示器?
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'

    // 完整版引入,视频
    implementation 'com.shuyu:GSYVideoPlayer:4.1.0'

    // compile 'com.shuyu:gsyVideoPlayer-java:4.1.1'

    // 圆角ImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'

    // 极光 -- 此处以JPush 3.1.1 版本为例。
    implementation 'cn.jiguang.sdk:jpush:3.1.1'

    // 此处以JCore 1.1.9 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.1.9'
    implementation 'org.jetbrains:annotations-java5:15.0'
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'
    implementation 'org.xutils:xutils:3.5.0'

    //    compile('com.github.niorgai:StatusBarCompat:2.1.4', {
    //        exclude group: 'com.android.support'
    //    })

    //// 根据你的需求
    // compile 'com.shuyu:gsyVideoPlayer-armv5:4.1.1'
    // compile 'com.shuyu:gsyVideoPlayer-armv7a:4.1.1'
    // compile 'com.shuyu:gsyVideoPlayer-arm64:4.1.1'

    // 融云即时通
    // implementation project(':IMKit')
    // implementation project(':IMLib')

    // x5内核，腾讯浏览器
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.1148_43697_sharewithdownloadwithfile_withoutGame_obfs_20190805_175505.jar')

}